name: Deploy to Amazon EC2

on:
  push:
    branches: ["dev"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # Updated to use the latest version

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.50.252.165 << 'EOF'
            cd home/ubuntu/snapit-api
            echo ETH_SEPOLIA_NFT_ADDRESS=${{ secrets.ETH_SEPOLIA_NFT_ADDRESS }} > .env
            echo BSC_TEST_NFT_ADDRESS=${{ secrets.BSC_TEST_NFT_ADDRESS }} >> .env
            echo BSC_TEST_AUCTION_ADDRESS=${{ secrets.BSC_TEST_AUCTION_ADDRESS }} >> .env
            echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
            echo BNC_TEST_CHAIN_URL=${{ secrets.BNC_TEST_CHAIN_URL }} >> .env
            echo BNC_TEST_CHAIN_ID=${{ secrets.BNC_TEST_CHAIN_ID }} >> .env
            echo ETH_SEPOLIA_CHAIN_URL=${{ secrets.ETH_SEPOLIA_CHAIN_URL }} >> .env
            echo ETH_SEPOLIA_CHAIN_ID=${{ secrets.ETH_SEPOLIA_CHAIN_ID }} >> .env
            echo GRAPH_URL_TOKEN=${{ secrets.GRAPH_URL_TOKEN }} >> .env
            echo GRAPH_URL_AUCTION=${{ secrets.GRAPH_URL_AUCTION }} >> .env
            echo ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }} >> .env
            echo MONGO_ATLAS_USERNAME=${{ secrets.MONGO_ATLAS_USERNAME }} >> .env
            echo MONGO_ATLAS_PASSWORD=${{ secrets.MONGO_ATLAS_PASSWORD }} >> .env
            git pull
            cargo build --release
            
            # Restart your application service, e.g., using Systemd
            sudo systemctl restart snapit-api.service
          EOF
